{"root":{"data":{"id":"bv1zp64cflk0","created":1561381925137,"text":"技能图谱"},"children":[{"data":{"id":"bv1zpkl35340","created":1561381956625,"text":"Android高级进阶"},"children":[{"data":{"id":"bv1ztts9m6w0","created":1561382290106,"text":"Android NDK"},"children":[]},{"data":{"id":"bv1zu5rp3340","created":1561382316193,"text":"性能优化"},"children":[]},{"data":{"id":"bv1zunfo0ww0","created":1561382354648,"text":"屏幕适配"},"children":[]},{"data":{"id":"bv1zvvnb9xc0","created":1561382450889,"text":"架构搭建"},"children":[]},{"data":{"id":"bv1zw6ele2w0","created":1561382474306,"text":"Android系统源码解读"},"children":[]},{"data":{"id":"bv1zwt4rav40","created":1561382523777,"text":"java进阶","note":"HashMap原理，Hash冲突，并发集合，线程安全集合及实现原理\nHashMap 和 HashTable 区别\nGC机制\nJava反射机制，Java代理模式\nJava泛型\nSynchronized原理\nVolatile实现原理\n线程同步的方法：Synchronized、lock、reentrantLock分析\nJava锁的种类\nThreadLocal的原理和用法\nThreadPool的用法和示例\nwait()和sleep()的区别\nJava虚拟机\nJava对象的完整生命周期\nJVM内存模型\n进程间通信，线程间通信\nJVM类加载机制\nJava引用类型\n设计模式：除常用设计模式之外，特别的，反射机制，代理模式\nHTTP协议和HTTPS协议\nSocket协议，Socket实现长连接\nTCP和UDP协议\nHTTP协议中GET和POST的具体实现\n序列化和反序列化\n线程池的实现原理\n数据库基础知识：多表查询、索引、数据库事务\n"},"children":[]},{"data":{"id":"bv1zx4k35b40","created":1561382548649,"text":"数据结构与算法"},"children":[]},{"data":{"id":"bv200ehw5880","created":1561382805377,"text":"计算机网络"},"children":[]}]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}